<%- include ('../partials/navbar') %>
<%- include ('../partials/messages') %>
<%- include ('../partials/footer') %>
<link rel="stylesheet" href="/stylesheets/table-sortable.css">
<meta name="viewport" content="width=device-width, initial-scale=1">
<script src="/scripts/table-sortable.js" ></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<h3 style="text-align: center; margin-top: 20px;">M&E Forms</h3>
<% if(showExcelReport){ %>
  <p id="demo"></p>
  <div class="row mt-4">
        <div class="col-md-6 m-auto">
           <div class="card card-body">
                <label for="validationTooltip03">Select Project</label>
                    <select class="custom-select custom-select-sm form-control" id="projectname" name="projectname">'+
                            <option value="" >Select</option>
                         <!--   <option value="a030p0000018ScOAAU" >Project 6</option>  -->
                    </select>
               
                </br/>

                <label for="validationTooltip03">Select Project Library</label>
                <select class="custom-select custom-select-sm form-control" id="projectLibrary" name="projectLibrary">'+
                        <option value="" >Select</option>
                </select>
                <br/>

                <button label="Generate Report" class="btn btn-primary" onClick="generateReport()" id="reportButton">Generate Report</button>
            </div>
        </div>
</div>
<% } %>

<br/>
<div class="container">
    <div class="row mt-5 mb-3 align-items-center">
        <div class="col-md-5">
            <a  href="/users/pldReports" style="color: #555;" id="ref" ><i class="fa fa-refresh" style="font-size:34px; margin-left: 10px; margin-top: 30px;"></i> </a>
               </div>
        <div class="col-md-4">
        <input type="text" class="form-control" placeholder="Search by Form Name " id="searchField" style="margin-top: 5px;">
        </div>
        <div class="col-md-2 text-right">
        <span class="pr-2">Rows Per Page:</span>
        </div>
        <div class="col-md-1">
            <div class="d-flex justify-content-end">
                <select class="custom-select" name="rowsPerPage" id="changeRows">
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="15" selected>15</option>
                </select>
            </div>
        </div>
 </div>

 <div id="vendorListViewTable" class="responsive ">

 </div>

</div>



<!-- Pld Forms Modal -->


  <!-- Responses Modal -->
  <div id="responsesModal" class="modal fade bs-example-modal-xl" tabindex ="-1" role="dialog" aria-labelledby="myLargeModalLabel" >
    <div class="modal-dialog modal-xl" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="createTaskModal">View Responses</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="table-responsive">
              <div id="spinner">
                 <center> <img src="/spinner-gif-transparent-background-14.gif" />  </center>
              </div>
            <table id="responsesTable" class="table ">
  
            </table>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
         
        </div>
      </div>
    </div>
  </div>

<script>
    $(document).ready(function(){
      
      let columns ={
            sequence : 'Serial',
            name: ' Project Name',
            formName: 'Form Name',
            formLink:'Form Link',
            createdDate:' Sent Date Time',
            viewResponses:'View Responses'
        }
        var table = $('#vendorListViewTable').tableSortable({
            data :[],
            columns,
            searchField: '#searchField',
            sorting: true,
            rowsPerPage: 15,
            pagination:true,
            sorting: ['sequence','createdDate'],
            tableWillMount: () => {
                console.log('table will mount')
                
            },
            tableDidMount: () => {
                console.log('table did mount');

                $('#spinner').hide();
            },
            tableWillUpdate: () => {
                console.log('table will update')
            //  table.refresh();
            // onLoadTask();
            },
            tableDidUpdate: () => {
            console.log('table did update');
             anchorClickFunctionalities();
         //   additionalEditFunctionality();
            
            },
            tableWillUnmount: () => console.log('table will unmount'),
            tableDidUnmount: () => console.log('table did unmount'),
            onPaginationChange: function(nextPage, setPage) {
                setPage(nextPage);
            },
        
        });
        $('#changeRows').on('change', function() {
            table.updateRowsPerPage(parseInt($(this).val()));
            })
    
            $('#refresh').click(function() {
                table.refresh(true);
                onLoadTask();
            })    
            $.ajax({
                url : '/users/getpldForm',
                type:'get',
                dataType: 'json'
           })
           .done((response) => {
               console.log('response it : '+JSON.stringify(response));
               table.setData(response, columns);
               anchorClickFunctionalities();
              
              
            })
          .fail((jqXHR, status, error) =>{
              console.log('jqXHR  : '+JSON.stringify(jqXHR));
              console.log('error  : '+error);
            })
    })
    function anchorClickFunctionalities()
    {
        $('a.vendorTag').on('click',function(event){
            event.stopImmediatePropagation();
            event.stopPropagation();
           
           let formId  = this.id;
           // let vendorId = this.id;
      //     alert('Form Id=>'+formId);
            $("#responsesModal").modal("show");
            $.ajax({
                type : 'GET',
                url  : '/users/viewResponses',
                data : {
                    'formId' : formId
                },
                dataType : 'json'
            })
             .done(function(response){
                      console.log('response  '+JSON.stringify(response));
  
                      let htmlResponsesTable = '';
                      if(response.length > 0)
                      {
                            htmlResponsesTable += '<thead><tr>';
                            htmlResponsesTable += '<th>Serial </th>';
                            htmlResponsesTable += '<th>Response Name</th>';
                            htmlResponsesTable += '<th>Response Date</th>';
                            htmlResponsesTable += '<th>Submit Approval</th>';
                            htmlResponsesTable += '<th>Status</th>';
                            htmlResponsesTable += '<th>Preview</th>';
                            htmlResponsesTable += '<th>Delete</th>';
                            htmlResponsesTable += '</tr></thead>';
                            htmlResponsesTable += '<tbody>';
                            let i=1;
                            response.forEach((eachRecord)=> {
                                console.log('type  : '+typeof(eachRecord.createddate));
                                let dateTime = new Date(eachRecord.createddate);
                                console.log('dateTime before edit on 193  : '+dateTime);
                                dateTime.setHours(dateTime.getHours());
                                dateTime.setMinutes(dateTime.getMinutes());
                                let planDt = dateTime.toLocaleString();
                                console.log('dateTime after edit on 197 : '+planDt);
                                htmlResponsesTable += '<tr>';
                                htmlResponsesTable += '<td>'+i+' </td>';
                                htmlResponsesTable += '<td>'+eachRecord.name+' </td>';
                                htmlResponsesTable += '<td>'+planDt+' </td>';
                                if(eachRecord.approval_status__c == 'Pending' || eachRecord.approval_status__c == 'Rejected'  || eachRecord.approval_status__c == 'Approved' )
                                htmlResponsesTable += '<td><button class="btn btn-primary submitFormForApproval" disabled = true id="'+eachRecord.sfid+'" >Submit For Approval</a> </td>';
                                else
                                htmlResponsesTable += '<td><button class="btn btn-primary submitFormForApproval" id="'+eachRecord.sfid+'" >Submit For Approval</a> </td>';
                                if(eachRecord.approval_status__c == 'Approved' || eachRecord.approval_status__c == 'Rejected' || eachRecord.approval_status__c != 'Pending' )
                                  htmlResponsesTable += '<td>'+eachRecord.approval_status__c+'</td>';
                                else
                                htmlResponsesTable += '<td>'+eachRecord.approval_status__c+'</td>';
                                if(eachRecord.approval_status__c != null && eachRecord.approval_status__c != 'Pending' )
                                {
                                  htmlResponsesTable += '<td><a class="btn btn-primary " href="https://learninglinksfoundationdonor.secure.force.com/responsepdf?Id='+eachRecord.sfid+'" target="_blank" style="color:white;"  >Preview</a> </td>';
                                  htmlResponsesTable += '<td><button class="btn btn-danger deleteResponse" id="'+eachRecord.sfid+'" >Delete</a> </td>';
                                }
  
                                
                                
                                htmlResponsesTable += '</tr>';
                                i++;
                            });
                            htmlResponsesTable += '</tbody>';
                      }
                      else
                      {
                        htmlResponsesTable += '<h4>No responses found !</h4>'
                      }
  
                      $('#responsesTable').empty();
                      $('#responsesTable').append(htmlResponsesTable);
                    //  $('#loader').addClass('hidden')
                       $('#spinner').hide();
  
  
  
                       $('.deleteResponse').on('click',function(event){
                            event.stopImmediatePropagation();
                            event.stopPropagation();
                            
                            let reponseId = this.id;
                          //  alert('Hello I am clicked '+reponseId);
  
                            $.post('/users/deletePldResponse',{reponseId : reponseId},function(response){
                                  console.log('reponse '+response);
                                  alert(response);
                            }).fail((error) => {
                                  console.log('Error');
                            })
  
                                               
                       });
  
                       
                       $('.submitFormForApproval').on('click',function(event){
                        event.stopImmediatePropagation();
                        event.stopPropagation();
                        
                        let reponseId = this.id;
                    //    alert('Hello I am clicked '+reponseId);
  
                        $.ajax({
                            url :'/users/sendResponseForApproval',
                            data : {reponseId : reponseId},
                            type :'post',
                            dataType: 'json'
                        })
                        .done((response) => {
                            console.log('response  : '+response);
                        })
                        .fail((jqXHR, status, error) => {
                          $('#spinnerPldForm').hide();
                          console.log('jqXHR   : '+JSON.stringify(jqXHR));
                          alert(jqXHR.responseText);
                        })                          
                   });
  
                  })
                  .fail(function(jqXHR, status, error){
                    $('#spinner').hide();
                    $('#spinnerPldForm').hide();
                    console.log('Error '+error);
                    console.log('status '+status);
                  })
  
  
  
                  
                  //alert($(this).attr('id')+' clicked!');
                })
              }
        $.get('/users/getProjectReportsAccessbility',function(response){
            console.log('getProjects response  '+JSON.stringify(response));
            if(response.length > 0)
            {
                    let projectDropdown = document.getElementById('projectname');
                    response.forEach((eachRecord)=>{
                            let option = new Option(eachRecord.name,eachRecord.sfid, false, false);
                            projectDropdown.appendChild(option);
                    });
            }

            
        }).fail(function(jqXHR,status,err){
            console.log('jqXHR : '+JSON.stringify(jqXHR));
            console.log('error : '+err);
        })


        $('#projectname').on('change',function(e){
                let selectedProjectId = this.value;
                console.log('selectedProjectId : '+selectedProjectId);
               alert('selectedProjectId  '+selectedProjectId);

                $.get('/users/getRelatedProjectLibraries',{selectedProjectId: selectedProjectId}, function(response){
                    console.log('project Libraries Responses : '+JSON.stringify(response));
                    if(response.length > 0)
                    {
                        let select = document.getElementById("projectLibrary");
                        let length = select.options.length;
                        for (i = length-1; i >= 0; i--) {
                        select.options[i] = null;
                        }   


                        let option1 = new Option('All','All',false,false);    
                        document.getElementById('projectLibrary').appendChild(option1);



                        response.forEach(function(eachRecord){
                            let option = new Option(eachRecord.pld_questions__c,eachRecord.sfid,false,false);    
                            document.getElementById('projectLibrary').appendChild(option);
                        });
                    }
                    else
                    {
                      //  document.getElementById('projectLibrary').empty();
                        let select = document.getElementById("projectLibrary");
                        let length = select.options.length;
                        for (i = length-1; i >= 0; i--) {
                        select.options[i] = null;
                        }
                        let option1 = new Option('Select','',true,true);    
                        document.getElementById('projectLibrary').appendChild(option1);
                    }

                }).fail(function(jqXHR, status, error){
                    console.log('jqXHR  : '+JSON.stringify(jqXHR));
                    console.log('error  : '+error);
                })



                //Adding Options

              /*  let option1 = new Option('All','All',false,false);    
                document.getElementById('projectLibrary').appendChild(option1);
                let option = new Option('Newest form for testing','a1l0p0000006jDRAAY',false,false);    
                document.getElementById('projectLibrary').appendChild(option); */


        })


    
    function generateReport()
    {
        let selectedProjectId =  $('#projectname :selected').val();
        console.log('typeof(selectedProjectId)  : '+typeof(selectedProjectId));
        console.log('selectedProjectId  '+selectedProjectId);

        let selectedProjectLibraryId =  $('#projectLibrary :selected').val();
        console.log('typeof(selectedProjectLibraryId)  : '+typeof(selectedProjectLibraryId));
        console.log('selectedProjectLibraryId  '+selectedProjectLibraryId);
        let selectedProjectAndLibraryId = selectedProjectId+'-'+selectedProjectLibraryId;

        if(selectedProjectId == '')
        {
            alert('Please select project first');
        }
        else if(selectedProjectId != '' && selectedProjectLibraryId == '')
        {
            alert('Please select project library');
        }
        else
        {
            location.assign('https://learninglinksfoundationdonor.secure.force.com/PldColumnReport?id='+selectedProjectAndLibraryId);
        }


        
    }
</script>
